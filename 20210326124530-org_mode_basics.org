:PROPERTIES:
:ID:       E67BF8C6-A54C-4E71-A9B3-F2FE1D14632A
:END:
#+title: Org-mode basics
#+date: 2021-03-26 12:45 PM
#+updated: 2023-04-03 16:08 PM
#+filetags: :org_mode:

This is a dump of notes on basic org-mode stuff. I recently switched from
Boostnote to org-mode.

See also [[id:7514BB0A-9713-4C61-9FFD-6C93BC0F0374][Org-roam stuff]]   

* Headings
** Rotate heading type
   (eg, TODO, DONE, etc) with:
  - ~S-RIGHT S-LEFT~
  - ~C-c C-t~
  - ~SPC m T T~ (spacemacs)

** Expand and Collapse
  - ~Tab~ for a single heading
  - ~S-Tab~  for all of them

** To change the collapse state ellipsis
   set variable: ~(set-q org-ellipsis " â–¼")~

*** To remove the underline face on the ellipsis
    you can use a hook:

  #+begin_src emacs-lisp
    (add-hook 'org-mode-hook (lambda () (set-face-underline 'org-ellipsis nil)))
  #+end_src

* Tags
  - Puts tags on headings
    ~org-set-tags-command~

  - Add multiple tags with ~:~ separator (eg, ~:tag1:tag2:~)

* Properties
  :PROPERTIES:
  :DESCRIPTION: This is a property. Set is with ~org-set-property~
  :END:

* Displaying images
  - ~org-toggle-inline-images~
  - Set image size. Place an HTML attribute above the link:

    ~#+attr_html: :width 500~

    Make sure to have variable: ~org-image-actual-width nil~. This will use the
    attribute size and fallback to actual.
** webp
   At the time of writing this, emacs doesn't have native support for displaying
   webp images. We can tell emacs to use a converter and make sure the system
   has imagemagick.
   ~(setq image-use-external-converter t)~
* Displaying boundaries
  Common use case is an 80 character column indicator.
  See
  [[https://www.gnu.org/software/emacs/manual/html_node/emacs/Displaying-Boundaries.html][Displaying boundaries docs]]

  - To change the column color set the face foreground:
   #+begin_src elisp
     (set-face-foreground 'fill-column-indicator "pink")
   #+end_src
    
* Source code
  - Eval with ~C-c C-c~
  - Edit in another buffer (optional): ~C-c '~
    This is useful when writing code in source blocks. Indention will actually
    work properly.
    [[https://orgmode.org/manual/Editing-Source-Code.html][Editing-Source-Code docs]]
    - Save without closing it: ~C-x C-s~
** Evaluate code against docker container
   With [[https://github.com/emacs-pe/docker-tramp.el/blob/master/README.md][docker-tramp]] (already with spacemacs), you can add the ~:dir~ header
   argument that points to a running docker container
   1. Build the docker image. ~docker build -t my-image .~
   2. Run the docker container. It can be helpful to give the container a name.
      #+begin_src 
      docker run -it --rm -v "$PWD":/app --name my-container --env-file .env my-image
      #+end_src
   3. Add the ~:dir~ header argument
      
      ~#+begin_src ruby :dir /docker:root@my-container:/app~

      - root is the user
      - my-container is the container name or ID

   See also https://orgmode.org/manual/Evaluating-Code-Blocks.html 
      
* Capture templates
  See [[id:7514BB0A-9713-4C61-9FFD-6C93BC0F0374][Org-roam Capture Templates]]  

* Export Settings
  See the following for more on this topic.
  - [[id:EA505166-BE28-45D4-8390-343AC9B48D05][Org-mode Export Settings]]
  - [[file:20210414210731-org_mode_publishing.org][Org-mode publishing]] 
  
* Lists
  https://orgmode.org/manual/Plain-Lists.html
** Ordered Lists
   ~C-c ^~ (~org-sort~): while cursor is somewhere on the list to sort lists by
   number, alpha, etc. (do not need to select a range)
** Checkboxes
   See also https://orgmode.org/manual/Checkboxes.html
   - Same syntax as markdown.
   - Toggle with ~org-toggle-checkbox~
   - They are hierarchical Add ~[/]~ to the parent to get a 'n out of m'.
   
* Superscripts
  - Add ~#+OPTIONS: ^:{}~ to your org-mode file
  - Superscript syntax: ~word^{superscript}~
  - Subscript syntax: ~word_{subscript}~
  See example in [[id:d9d045d0-8598-4e5f-be7e-f61312460d3d][Raised vegetable gardening]]
