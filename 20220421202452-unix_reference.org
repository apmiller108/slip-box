:PROPERTIES:
:ID:       4ac31a1d-cdb1-4722-8215-3ed01414084b
:END:
#+title: Unix reference
#+date: 2022-04-21 20:24 PM
#+updated: 2024-12-27 19:39 PM
#+filetags: unix:linux:

This is a quick reference for some common Unix commands, tools and
configuration.

See also [[id:3453ED9D-38E6-4EDA-9652-189BCABA429F][Shell tips]]

* Permissions
  See also [[https://github.com/lansana/unix-permissions-cheat-sheet][this cheatsheet]] for more.
** View file permissions and ownership
   #+begin_src shell
   ls -l
   #+end_src

  | type | user | group | other |
  |------+------+-------+-------|
  | -    | rwx  | rw-   | r--   |

  Type could be ~d~ (ie, directory)

** Change permissions
    #+begin_src shell
      chmod u+rw file
    #+end_src

    Adds (+), for user (u), read and write (rw) permissions. See ~chmod --help~.

** Change ownership
   #+begin_src shell
   chown username file
   chown username:groupname file
   chgrp groupname file
   #+end_src

* Groups
** List groups
  | cmd                    | description                   |
  |------------------------+-------------------------------|
  | groups                 | list your groups              |
  | groups username        | list a user's groups          |
  | getent group groupname | list users in a group         |
  | cat /etc/group         | list all groups on the system |

** Manage group membership
   Use ~gpasswd~
* User Information
  The ~id~ utility can provide information like uid, groups, etc. Use a flag to
  pull out specific information (~-u~ => uid)
  #+begin_src shell
  id username
  #+end_src

   Need to restart after changing group membership

* Magic SysRq key
  Send low level commands regardless of system state (freeze)

  - Hold down ~ALT~ + ~SysRq~
    - If on a laptop or keyboard with no ~SysRq~ key use ~Fn~ + ~Prtsc~ and
      release (be keep holding ~ALT~)
  - See also https://en.wikipedia.org/wiki/Magic_SysRq_key
  - ~REISUB~ for a safe restart


* Repositories (apt)
** Release file expired error
   A couple options:

   1. Find another mirror. One that isn't expired. Or...
   2. Instruct apt to always skip the validity check

      #+begin_src shell
      touch /etc/apt/apt.conf.d/99no-check-valid-until && \
      echo 'Acquire::Check-Valid-Until no;' > /etc/apt/apt.conf.d/99no-check-valid-until
      #+end_src
** Install specific version (if available)
   #+begin_src shell
   apt-get install something=1.1.1
   #+end_src
*** Check for available versions
    #+begin_src
    apt-cache policy ruby-full
    #+end_src
** Add a repository
   First add software-properties-common:

   #+begin_src shell
   apt-get install -y software-properties-common
   #+end_src

   Then added the repo:
   #+begin_src shell
   add-apt-repository ppa:kelleyk/emacs
   #+end_src

   And update
   #+begin_src shell
   apt-get update
   #+end_src
* File System
  The following are just basic examples. There's a lot you can do with these
  tools. Use ~--help~ or man pages.
** Display file system information
*** df
    Example: (human-readable)
    #+begin_src shell
    df -h
    #+end_src

** Disk Usage
*** du (disk usage)
    Example: (human-readable)
     #+begin_src shell
     du -hs
     #+end_src

** Copy files over SSH
*** scp
    Example: (recursive). This will use remote directories the map to the
    specified user's home directory. Enter remote user's pw when prompted.
    #+begin_src
    scp -r "scp://pi@192.168.68.55/user/dir/path/to/stuff" ~/Downloads
    #+end_src

** Make disk image
   After attaching the disk you want imaged, use ~df -h~ to
   get the mount point. Then use use the ~dd~ utility and specify the imput and
   output. Example:

   #+begin_src shell
   sudo dd if=/dev/mmcblk0p2 of=~/myimage.img
   #+end_src

   There will be no output while the image is made.
** Make a Hexdump
*** xxd
    #+begin_src shell
    xxd -ps /path/to/file | tr -d '\n'
    #+end_src
* Devices
  See also [[id:d5d67aa4-e66e-48de-90d1-051ef3a8df77][Pop_os]] (eg, ~lsusb~, etc)

** Find TTY for USB device
   Run dmesg in watch mode and look for tty, then plug in the device
  #+begin_src sh
    sudo dmesg -W | grep tty
  #+end_src

  It will print something like:
  #+begin_src 
    [74438.164216] cdc_acm 1-1:1.0: ttyACM0: USB ACM device
  #+end_src

* Logging
** Boot process
*** dmesg
    A command line utility to view (among other things) kernel messages
    regarding hardware devices. Is something going wrong with the boot process,
    some devices not working? Look at ~dmesg~.
** System logging
   ~/var/log/syslog~
** Other logging
   Look in ~/var/log/~ directory at all the other log files. Applications will
   write logs here. For example ~/var/log/httpd~
* SSH
** Allow SSHing onto a system
   1. Install ~openssh-server~. This is configured via ~systemd~ to automatically
      start.
   2. Use ~ufw~ to open port 22  (if firewall is active)
