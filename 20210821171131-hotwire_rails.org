:PROPERTIES:
:ID:       1E969F0A-52A6-4D2C-A227-5BF6AE253044
:END:
#+title: Hotwire rails
#+date: 2021-08-21 17:11 PM
#+updated: 2023-01-27 16:22 PM
#+filetags: :javascript:ruby:rails:

* What is this?
  [[https://hotwired.dev/][Hotwire]] is a way of building web applications that, at its core, is about
  sending server rendered HTML over "this wire" (ie, HTTP or websocket). It is
  composed of three things:

  1. [[https://turbo.hotwired.dev/][Turbo]]: This is really the main thing. With this library alone, we can do
     HTML over the wire.
  2. [[https://stimulus.hotwired.dev/][Stimulus]]: A JS framework that doesn't care about rendering stuff, but
     rather with dynamic behavior typical of an SPA.
  3. Strada: something to do with mobile -- not sure. As now this moment it has
     not been made public


  See https://github.com/hotwired for all the libraries.

* Add to Rails application
  Add the ~hotwire-rails~ gem. Follow the instructions in the [[https://github.com/hotwired/hotwire-rails][Readme]].

  NOTE:
  - This appears to basically be a wrapper for [[https://github.com/hotwired/turbo-rails][turbo-rails]] and
    [[https://github.com/hotwired/stimulus-rails][stimulus-rails]].
  - The ~hotwire:install~ rake task will ~yarn add~ both NPM packages
    ~@hotwired/turbo-rails~ and ~stimulus~.
** Rails 7
   By default Rails 7 will use import maps. Consider also using [[https://esbuild.github.io/][esbuild]]. See
   also [[https://github.com/rails/jsbundling-rails][jsbundling-rails]] and [[https://www.youtube.com/watch?v=qOptalp8zUY][GoRails How to use ESBuild...]]
*** esbuild
    See also http://www.ahmednadar.com/posts/setup-tailwindcss-and-esbuild-on-rails-7
    Example:
    #+begin_src shell
      rails new foo --javascript=esbuild --css=tailwind
    #+end_src
**** bin/dev
     Rails apps are now started with ~bin/dev~ for development. This uses [[https://github.com/ddollar/foreman][foreman]]
     to manager three processes defined in ~Procfile.dev~
     #+begin_src shell
       web: unset PORT && bin/rails server -p 3000 -b '0.0.0.0'
       js: yarn build --watch
       css: yarn build:css --watch
     #+end_src
**** package.json
     Defines two build commands:
     #+begin_src json
       "scripts": {
         "build": "esbuild app/javascript/*.* --bundle --sourcemap --outdir=app/assets/builds --public-path=assets",
         "build:css": "tailwindcss -i ./app/assets/stylesheets/application.tailwind.css -o ./app/assets/builds/application.css --minify"
       }
     #+end_src
* Tutorials
  - https://gorails.com/episodes/inline-editing-turbo-frames: Shows how to
    leverage turbo frames and rails partials to add inline field editing to a
    show page. Most of this is done in the erb view templates. See [[https://github.com/thoughtbot/hotwire-example-template/tree/hotwire-example-inline-edit][source code]]
    for an example.
* Resources
  - https://github.com/hotwired 
  - https://www.honeybadger.io/blog/hotwire-rails/
  - https://github.com/thoughtbot/hotwire-example-template/tree/hotwire-example-inline-edit
  - https://gorails.com/series/hotwire-rails
  - https://blog.appsignal.com/2022/07/06/get-started-with-hotwire-in-your-ruby-on-rails-app.html
 
