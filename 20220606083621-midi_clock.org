:PROPERTIES:
:ID:       24E1468A-279A-4B44-8AB8-A8A1C5D8D42D
:END:
#+title: MIDI clock
#+date: 2022-06-06 08:36 AM
#+updated: 2022-06-14 08:49 AM
#+filetags: :audio:midi:

See also [[id:5741B4DD-B291-4F6D-A33A-EB4CD83792FF][MIDI messages]]

* Clock Message
  - 24 messages = 1 quarter note.
  - When 24 clock messages are received, the receiving MIDI device knows that 1
    quarter note has passed. 
  - To generate a MIDI clock signal, calculate the pulse rate based on the BPM
    and send a simple message at that rate. 
** Formula
*** Pulse per ms rate
   1 minute = 60 seconds = 60,000 ms
  
   #+begin_src
   60,000 ms / ppq * bpm
   #+end_src

   Example using 120 BPM:

   #+begin_src ruby
     ppq = 24.0
     bpm = 120.0
    
     ppms = 60_000 / (ppq * bpm)
     "One pulse every #{ppms} ms"
   #+end_src

   #+RESULTS:
   : One pulse every 20.833333333333332 ms

** Message Contents
*** Status
    ~0xF8~

    There is no channel number.
*** Data
    No data is required for this message, just the status byte

* Sequencing
** MIDI Start
** MIDI Stop
** MIDI Continue
* Sending MIDI Clock from Mixxx
** Existing Limitation  
  Mixxx only supports a 20ms resolution timer. This will work for BPMs under 100
  so it's not practical. See [[https://github.com/mixxxdj/mixxx/blob/7672cf1a5efcc17b0ead2f28c7585414fea41b7b/src/controllers/scripting/legacy/controllerscriptinterfacelegacy.cpp#L455-L458][ControllerScriptInterfaceLegacy::beginTimer]]. It
  uses [[https://doc.qt.io/qt-5/qobject.html#startTimer][QObject startTimer]] which only supports using MS. This need microsecond
  precision.

*** Possible solution
    See https://stackoverflow.com/a/21856299.

    This would require adding a high resolution timer. Maybe an API like
    ~engine.beginHighResTimer~.

**** Other references
     - https://github.com/99x/timercpp/blob/master/timercpp.h
       - This is not thread safe.
       - Maybe it could be adapted to use ~std::chrono::milliseconds~
       - See also https://en.cppreference.com/w/cpp/thread/sleep_for
  
* Resources
  - https://en.wikipedia.org/wiki/MIDI_beat_clock
  - http://midi.teragonaudio.com/tech/midispec/clock.htm
  - http://www.giordanobenicchi.it/midi-tech/midispec.htm
  - https://www.midi.org/forum/9102-send-midi-clock
