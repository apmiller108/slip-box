:PROPERTIES:
:ID:       284b93d5-e030-4c8a-932b-03858767dfb6
:END:
#+title: Wine
#+date: 2021-12-05 20:52 PM
#+updated: 2024-05-18 10:09 AM
#+filetags: :linux:

Run Windows programs on linux

* Installing on Ubuntu
  For the latest version. Follow these instructions for your distro
  https://wiki.winehq.org/Ubuntu

  You'll also want [[https://wiki.winehq.org/Winetricks][Winetricks]]

* Configuring Wine
  There's a GUI applications for this. Just run ~winecfg~.

** Graphics
   With 4k monitors, the applications will be tiny. Go to the ~Graphics~
   tab and increase the Screen resolution dpi value.
*** Frozen / Unresponsive GUIs
    Try [[https://github.com/doitsujin/dxvk][dxvk]]

    1. Create a new wine prefix for the program that doesn't work properly (see
       Program Installation below) and install it.
    2. Download a release from https://github.com/doitsujin/dxvk and follow the
       instructions in the README. Basically, you will copy some DLLs from the
       release to the WINEPREFIX location and add DLL overrides using ~wineconfig~
    3. There are drivers and additional dependencies that might be needed.
       See also
       - https://linuxconfig.org/improve-your-wine-gaming-on-linux-with-dxvk
       - https://github.com/robbert-vdh/yabridge/issues/258
    4. If this is a VST plug, add the plugin location using ~yabridgectl add~ and run
       ~~yabridgectl sync~ (See VST Plugins section below)
* Program Installation
** Installation options
   You can have multiple installation directories. For example, you have run a
   32bit application on a 64bit system by doing something like this:

   #+begin_src shell
   export WINEPREFIX=~/.wine-someapp/
   export WINEARCH="win32"
   wineboot
   #+end_src

   ~WINEPREFIX~ is the directory. See also [[https://wiki.winehq.org/Wine_User%27s_Guide#WINEPREFIX][WINEPREFIX docs]].
   ~WINEARCH~ sets the system architecture
   - ~win32~ or ~win64~

   This will create a ~.wine-someapp/~ directory. With the env vars set, all
   subsequent wine commands will use that directory and architecture. So, now you
   can do ~wine someapp_installer.exe~. Then ~wine ".wine-someapp/drive_c/Program
   Files/someapp/someapp.exe"~

   The env vars will only be set for that terminal sessions. For subsequent
   terminal sessions, they need to be reset or used inline when running the
   command to start the app.

   #+begin_src shell
   WINEPREFIX=~/.wine-someapp WINEARCH="win32" wine ~/.wine-someapp/drive_c/Program\ Files/someapp/someapp.exe
   #+end_src
** Desktop shortcuts
   Installing will create desktop shortcuts. Right click on it and choose "Allow
   Launching" to make it clickable.
* Running Programs
  You can use the desktop shortcut created on install, or run it from a
  terminal. First, find out where the program was installed in the "windows"
  directory. Then call ~wine~ with that path:

  #+begin_src shell
  wine "c:\Program Files\Some App\Some Executable.exe"
  #+end_src
* Program Uninstall
  Just run ~wine uninstaller~.
* VST plugins
  See also https://github.com/brendaningram/linux-audio-setup-scripts
** yabridge
*** Install, setup and usage
  - install [[https://github.com/robbert-vdh/yabridge][yabridge]] (see also https://github.com/brendaningram/linux-audio-setup-scripts)
    #+begin_src shell
      wget -O yabridge.tar.gz https://github.com/robbert-vdh/yabridge/releases/download/5.1.0/yabridge-5.1.0.tar.gz
      mkdir -p ~/.local/share
      tar -C ~/.local/share -xavf yabridge.tar.gz
      rm yabridge.tar.gz
    #+end_src
  - Add yabridge to your path
  - Create the conventional VST plugin paths on Wine's "C" drive
    #+begin_src  shell
    mkdir -p "$HOME/.wine/drive_c/Program Files/Steinberg/VstPlugins"
    mkdir -p "$HOME/.wine/drive_c/Program Files/Common Files/VST2"
    mkdir -p "$HOME/.wine/drive_c/Program Files/Common Files/VST3"
    #+end_src

  - Add those same paths to yabridge
    #+begin_src shell
    yabridgectl add "$HOME/.wine/drive_c/Program Files/Steinberg/VstPlugins"
    yabridgectl add "$HOME/.wine/drive_c/Program Files/Common Files/VST2"
    yabridgectl add "$HOME/.wine/drive_c/Program Files/Common Files/VST3"
    #+end_src

  - When you download a VST plugin ~exe~ file, right click and run the installer
    with Wine. Make sure it gets installed in one of the paths above.
  - If it's just a DLL file, you should just be able to move it to one of the
    paths above.
  - Sync yabridge ~yabridgectl sync~
  - Check yabridge status ~yabridgectl status~ to verify.
  - The plugin should now be usable in certain DAWs (eg, Reaper).
*** Upgrading
    Run the install again. It will overwrite the existing files. Then run ~yabridgectl sync~
* Resources
  [[https://wiki.winehq.org/Main_Page][Wine Wiki]]
  [[https://wiki.winehq.org/FAQ][Wine FAQ]]
  [[https://www.winehq.org/documentation][Wine documentation]]
